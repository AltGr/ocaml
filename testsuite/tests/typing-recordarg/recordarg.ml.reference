
#       module M : sig type t = A of { x : int; } val f : t -> t.A end
# - : M.t -> M.t.A = <fun>
#               module A : sig type t = A of { x : int; } val f : t -> t.A end
#   module type S = sig type t = A of { x : int; } val f : t -> t.A end
# module N : sig type t = M.t = A of { x : int; } val f : t -> t.A end
#     * * * * * * * * * * * * * * * * * *   
